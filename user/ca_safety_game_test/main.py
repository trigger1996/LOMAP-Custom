
'''
INFO __main__ - robot_1 run prefix: ['u1', '4', 'u1', '4', '5', '27', '28', '21']
INFO __main__ - robot_1 control perfix: ['ufl', 'f', 'ufl', 'rf', 'rfr', 'lf', 'f']
INFO __main__ - robot_1 suffix cycle: ['21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21']
INFO __main__ - robot_1 control suffix cycle: ['lf', 'lf', 'ufl', 'f', 'f', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'lf', 'ufl', 'f', 'f', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'lf', 'ufl', 'f', 'f', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'lf', 'ufl', 'f', 'f', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'lf', 'ufl', 'f', 'f', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'lf', 'ufl', 'f', 'f', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'lf', 'ufl', 'f', 'f', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr']
INFO __main__ - robot_2 run prefix: ['u2', '10', 'u2', '10', '11', '23', '24', '25']
INFO __main__ - robot_2 control perfix: ['ufl', 'f', 'ufl', 'rf', 'rfr', 'lf', 'f']
INFO __main__ - robot_2 suffix cycle: ['25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25']
INFO __main__ - robot_2 control suffix cycle: ['lf', 'lf', 'ufl', 'f', 'fr', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'lf', 'ufl', 'f', 'fr', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'lf', 'ufl', 'f', 'fr', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'lf', 'ufl', 'f', 'fr', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'lf', 'ufl', 'f', 'fr', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'lf', 'ufl', 'f', 'fr', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'lf', 'ufl', 'f', 'fr', 'f', 'f', 'ufl', 'rf', 'f', 'f', 'rf', 'rfr']
INFO __main__ - robot_3 run prefix: ['11', '12', '1', '2', '21', '22', '23', '9', '10']
INFO __main__ - robot_3 control perfix: ['f', 'f', 'rf', 'rfr', 'lf', 'f', 'f', 'f']
INFO __main__ - robot_3 suffix cycle: ['10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10']
INFO __main__ - robot_3 control suffix cycle: ['rf', 'f', 'f', 'rf', 'rfr', 'lf', 'f', 'f', 'f', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'f', 'f', 'f', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'f', 'f', 'f', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'f', 'f', 'f', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'f', 'f', 'f', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'f', 'f', 'f', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'f', 'f', 'f', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'f', 'f', 'f', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'f', 'f', 'f', 'rf', 'f', 'f', 'rf', 'rfr', 'lf', 'f', 'f', 'f']
'''

# https://blog.csdn.net/u013180339/article/details/77002254


import numpy as np
import matplotlib.pyplot as plt
from matplotlib import animation

from lomap import Ts
import lomap.algorithms.ca_safety_games as safety

def main():
    r1 = Ts.load('./robot_1.yaml')
    r2 = Ts.load('./robot_2.yaml')
    r3 = Ts.load('./robot_3.yaml')
    is_modifible = [ True, True, False ]        # robot 3 is foe

    r1_prefix = ['u1', '4', 'u1', '4', '5', '27', '28', '21']
    r1_suffix = ['21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21', '22', 'g1', '22', '23', '9', '10', 'u2', '10', '11', '12', '1', '2', '21']
    r2_prefix = ['u2', '10', 'u2', '10', '11', '23', '24', '25']
    r2_suffix = ['25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25', '26', 'g3', '26', '27', '3', '4', 'u1', '4', '5', '6', '7', '8', '25']
    r3_prefix = ['11', '12', '1', '2', '21', '22', '23', '9', '10']
    r3_suffix = ['10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10', '11', '12', '1', '2', '21', '22', '23', '9', '10']


    # test_2
    team_prefix = [('u1', 'u2', '11'), ('4', '10', ('11', '12', 2)), ('u1', 'u2', ('11', '12', 3)), (('u1', '4', 1), ('u2', '10', 1), '12'), ('4', '10', '1'), ('5', '11', '2'), ('27', '23', '21'), (('27', '28', 2), ('23', '24', 2), '22'), ('28', '24', ('22', '23', 1)), (('28', '21', 1), ('24', '25', 1), '23'), (('28', '21', 2), ('24', '25', 2), '9'), ('21', '25', '10')]
    team_suffix = [('21', '25', '10'), (('21', '22', 1), ('25', '26', 1), '11'), ('22', '26', ('11', '12', 1)), ('g1', 'g3', ('11', '12', 2)), ('22', '26', '12'), (('22', '23', 1), ('26', '27', 1), '1'), ('23', '27', '2'), ('9', '3', '21'), ('10', '4', ('21', '22', 1)), ('u2', 'u1', '22'), ('10', '4', '23'), ('11', '5', '9'), (('11', '12', 1), ('5', '6', 1), '10'), (('11', '12', 2), ('5', '6', 2), '11'), ('12', '6', ('11', '12', 2)), ('1', '7', ('11', '12', 3)), ('2', '8', '12'), ('21', '25', '1'), (('21', '22', 1), ('25', '26', 1), '2'), ('22', '26', '21'), ('g1', 'g3', ('21', '22', 1)), (('g1', '22', 1), ('g3', '26', 1), '22'), ('22', '26', ('22', '23', 1)), (('22', '23', 1), ('26', '27', 1), '23'), ('23', '27', '9'), ('9', '3', '10'), ('10', '4', '11'), ('u2', 'u1', ('11', '12', 1)), ('10', '4', ('11', '12', 3)), ('11', '5', '12'), (('11', '12', 1), ('5', '6', 1), '1'), (('11', '12', 2), ('5', '6', 2), '2'), (('11', '12', 3), ('5', '6', 3), '21'), ('12', '6', ('21', '22', 1)), ('1', '7', '22'), ('2', '8', ('22', '23', 1)), ('21', '25', '23'), (('21', '22', 1), ('25', '26', 1), '9'), ('22', '26', '10'), ('g1', 'g3', '11'), ('22', '26', ('11', '12', 2)), ('23', '27', '12'), ('9', '3', '1'), ('10', '4', '2'), ('u2', 'u1', '21'), ('10', '4', '22'), ('11', '5', ('22', '23', 1)), (('11', '12', 1), ('5', '6', 1), '23'), (('11', '12', 2), ('5', '6', 2), '9'), (('11', '12', 3), ('5', '6', 3), '10'), ('12', '6', '11'), ('1', '7', ('11', '12', 1)), ('2', '8', ('11', '12', 2)), ('21', '25', ('11', '12', 3)), (('21', '22', 1), ('25', '26', 1), '12'), ('22', '26', '1'), ('g1', 'g3', '2'), (('g1', '22', 1), ('g3', '26', 1), '21'), ('22', '26', ('21', '22', 1)), (('22', '23', 1), ('26', '27', 1), '22'), ('23', '27', ('22', '23', 1)), ('9', '3', '23'), ('10', '4', '9'), ('u2', 'u1', '10'), (('u2', '10', 1), ('u1', '4', 1), '11'), ('10', '4', ('11', '12', 1)), ('11', '5', ('11', '12', 2)), (('11', '12', 2), ('5', '6', 2), '12'), (('11', '12', 3), ('5', '6', 3), '1'), ('12', '6', '2'), ('1', '7', '21'), ('2', '8', ('21', '22', 1)), ('21', '25', '22'), ('22', '26', '23'), ('g1', 'g3', '9'), (('g1', '22', 1), ('g3', '26', 1), '10'), ('22', '26', '11'), ('23', '27', ('11', '12', 2)), ('9', '3', ('11', '12', 3)), ('10', '4', '12'), ('u2', 'u1', '1'), (('u2', '10', 1), ('u1', '4', 1), '2'), ('10', '4', '21'), ('11', '5', ('21', '22', 1)), (('11', '12', 1), ('5', '6', 1), '22'), (('11', '12', 3), ('5', '6', 3), '23'), ('12', '6', '9'), ('1', '7', '10'), ('2', '8', '11'), ('21', '25', ('11', '12', 1)), ('22', '26', ('11', '12', 3)), ('g1', 'g3', '12'), (('g1', '22', 1), ('g3', '26', 1), '1'), ('22', '26', '2'), (('22', '23', 1), ('26', '27', 1), '21'), ('23', '27', ('21', '22', 1)), ('9', '3', '22'), ('10', '4', ('22', '23', 1)), ('u2', 'u1', '23'), (('u2', '10', 1), ('u1', '4', 1), '9'), ('10', '4', '10'), ('11', '5', '11'), ('12', '6', '12'), ('1', '7', '1'), ('2', '8', '2'), ('21', '25', '21'), ('22', '26', '22'), ('g1', 'g3', ('22', '23', 1)), (('g1', '22', 1), ('g3', '26', 1), '23'), ('22', '26', '9'), (('22', '23', 1), ('26', '27', 1), '10'), ('23', '27', '11'), ('9', '3', ('11', '12', 1)), ('10', '4', ('11', '12', 2)), ('u2', 'u1', ('11', '12', 3)), (('u2', '10', 1), ('u1', '4', 1), '12'), ('10', '4', '1'), ('11', '5', '2'), (('11', '12', 1), ('5', '6', 1), '21'), (('11', '12', 3), ('5', '6', 3), '22'), ('12', '6', ('22', '23', 1)), ('1', '7', '23'), ('2', '8', '9'), ('21', '25', '10')]

    '''
    
        robot1 and robot2 are collision-free
        robot3 is foe
    
    '''


    ''' SAFETY GAMES '''
    ts_tuple = tuple([r1, r2, r3])
    for run_t in team_prefix:
        for i in range(0, ts_tuple.__len__()):
            if is_modifible[i]:
                cur_ts = ts_tuple[i]
                cur_state = run_t[i]
                target_node = safety.search_agent_route(cur_ts, cur_state, weight_limit=10, is_weight_based=True)
                for j in range(0, ts_tuple.__len__()):
                    if not is_modifible[j]:
                        if run_t[j] in set(target_node):
                            print(run_t)
                            print(run_t[j])
                            print(target_node)
                            print(cur_ts.name)
                            print(cur_state)
                            print("\n")


if __name__ == '__main__':
    main()
